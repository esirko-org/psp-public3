name: publish maven

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      token_type:
        description: 'Token type'
        default: 'secrets.GITHUB_TOKEN'
        type: choice
        options:
          - secrets.GITHUB_TOKEN
          - PAT
          - GitHub App
      name_suffix:
        description: 'Name suffix for package'
        type: string

env:
  NAME: ${{ github.event.repository.name }}
  VERSION: 1.0-SNAPSHOT
  GROUP_ID: com.octokat.app
  CLASS_NAME: PublishApp
  SETTINGS_FILE: settings.xml

jobs:
  publish-maven:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - name: Clean
        run: rm -fr * .* || true

      - uses: actions/checkout@v2

      - name: Set environment vars based on workflow inputs
        run: |
          token_type="${{ github.event.client_payload.token_type }}"
          if [ -z "$token_type" ]; then token_type="${{ inputs.token_type }}"; fi
          name_suffix="${{ github.event.client_payload.name_suffix }}"
          if [ -z "$name_suffix" ]; then name_suffix="${{ inputs.name_suffix }}"; fi

          echo "token_type: $token_type"
          echo "name_suffix: $name_suffix"
          if [[ "$token_type" == "PAT" ]]; then
            echo "Setting env.TOKEN = secrets.PAT"
            echo "TOKEN=${{ secrets.PAT }}" >> $GITHUB_ENV
          elif [[ "$token_type" == "GitHub App" ]]; then
            echo "Setting env.TOKEN = GitHub App"
            echo "TOKEN=$(./get-github-app-token ${{ github.repository_owner }})" >> $GITHUB_ENV
          else
            echo "Setting env.TOKEN = secrets.GITHUB_TOKEN"
            echo "TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
          fi
          cat config | while read line; do echo "$line" >> $GITHUB_ENV; done
          echo "TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.%3N)" >> $GITHUB_ENV
          echo "NAME_SUFFIX=$name_suffix" >> $GITHUB_ENV

      - name: Output environment variables, etc.
        run: |
          echo "github.repository_owner: ${{ github.repository_owner }}"
          echo "github.repository: ${{ github.repository}}"
          echo "github.event.repository.name: ${{ github.event.repository.name}}"
          echo "TIMESTAMP: ${{ env.TIMESTAMP}}"
          echo "NAME: ${{ env.NAME }}"
          echo "NAME_SUFFIX: ${{ env.NAME_SUFFIX }}"
          echo "VERSION: ${{ env.VERSION }}"
          echo "TOKEN: ${{ env.TOKEN }}"
          echo "MAVEN_REGISTRY_URL: ${{ env.MAVEN_REGISTRY_URL }}"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: oracle

      - name: Add settings.xml
        run: |
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
            xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>${{ env.MAVEN_REGISTRY_URL }}/${{ github.repository }}</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <servers>
              <server>
                <id>github</id>
                <username>token</username>
                <password>${env.ENV_TOKEN}</password>
              </server>
            </servers>
          </settings>' > ${{ env.SETTINGS_FILE }}

      - name: Add simple pom.xml
        run: |
          cat > pom.xml << EOM
          <?xml version="1.0" encoding="UTF-8"?>
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <properties>
              <maven.compiler.source>1.7</maven.compiler.source>
              <maven.compiler.target>1.7</maven.compiler.target>
            </properties>
            <modelVersion>4.0.0</modelVersion>
            <groupId>${{ env.GROUP_ID }}</groupId>
            <artifactId>${{ env.NAME }}${{ env.NAME_SUFFIX }}</artifactId>
            <version>${{ env.VERSION }}</version>
          </project>
          EOM

      - name: Add ${{ env.CLASS_NAME }}.java file
        run: |
          SOURCE_DIR=src/main/java/$(echo ${{ env.GROUP_ID }} | tr . /)
          mkdir -p $SOURCE_DIR
          SOURCE_PATH=$SOURCE_DIR/${{ env.CLASS_NAME }}.java
          cat <<- END > $SOURCE_PATH
          package ${{ env.GROUP_ID }};
          public class ${{ env.CLASS_NAME }}
          {
              public static void main( String[] args )
              {
                  System.out.println( "Hello from ${{ github.repository }}! Package [${{ github.repository_owner }}/${{ env.NAME }}${{ env.NAME_SUFFIX }}] Version ${{ env.VERSION }} Created at ${{ env.TIMESTAMP }}" );
              }
          }
          END

      - name: Build package
        run: mvn package --no-transfer-progress

      - name: Run package
        run: java -cp target/${{ env.NAME }}${{ env.NAME_SUFFIX }}-${{ env.VERSION }}.jar ${{ env.GROUP_ID }}.${{ env.CLASS_NAME }}

      - name: Deploy package
        run: mvn deploy --settings ${{ env.SETTINGS_FILE }} -DaltDeploymentRepository=github::default::${{ env.MAVEN_REGISTRY_URL }}/${{ github.repository }} --no-transfer-progress
        env:
          ENV_TOKEN: ${{ env.TOKEN }}
